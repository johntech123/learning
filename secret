first create secret

kubectl create secret generic <nameofsecret> --from-literal=key=value     for single value like password=123
kubectl create secret generic <name> --from-literal=username=srk --from-literal=password=123demo
kubectl get secrets <nameofsecret>
kubectl get secrets my-secret -o yaml    below is the output
apiVersion: v1
data:
  password: MTIzZGVtbw==
  username: c3Jr
kind: Secret
metadata:
  creationTimestamp: "2025-04-09T07:13:57Z"
  name: mysecret
  namespace: default
  resourceVersion: "3441"
  uid: e0c3e00c-3611-4973-b1e1-fb3d10a3b020
type: Opaque

echo "MTIzZGVtbw==" | base64 --decode   to decode the base64 encoded secret

NOW Sealed-Secret:::


**first install sealed-secret oprator/controller

helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
helm install my-release sealed-secrets/sealed-secrets -n kube-system

**now install kubseal cli tool which will interact with kubernetes

KUBESEAL_VERSION='0.29.0'      you can change the version based on req or compatibility echo $KUBESEAL_VERSION
curl -OL "https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION}/kubeseal-${KUBESEAL_VERSION}-linux-amd64.tar.gz"
tar -xvzf kubeseal-${KUBESEAL_VERSION}-linux-amd64.tar.gz kubeseal
kubeseal --version      this 4 command manually run one by one     DONE

kubeseal besically encrypt your secret with the help of public key 
to check whether kubeseal is able to talk with kubernetes cluster below is the command
kubeseal --fetch-cert --controller-name <controller-name> --controller-namespace kube-system  #controllr milenga kubectl get svc -n kube-sytem me "my-release sealed secret" ye hai
#you will see a pulic key output here

Q:how to sealed the secret?

kubectl create secret generic my-secret --from-literal=DB_PASSWORD=hello123 --dry-run=client -o yaml > secret.yaml   first create a secret
then  
kubeseal --controller-name my-release-sealed secret --controller-namespace kube-system --formate yaml < (secretname) >sealed-secret.yaml
kubectl apply -f sealed-secret.yaml
now its encrypted you can share it store it safely on github repo









