helm repo add repo-name <url>    example  helm repo add bitnami <url>
helm repo list                to check list of repo
before helm install if you want to check the manifest or want to inject custom values then 
helm pull <repo-name>/chart-name --untar          it will download the chart locally
cd template
helm show values bitnami/nginx >custom-values.yaml   if you dont want to download directory structure as above then use this to create custom values.yaml
helm template hello bitnami/nginx -f custom-values.yaml    dry run with hello releasename
helm install hello bitnami/nginx -f custom-values.yaml
helm list                                                   list of releases/app version/chart version/ns you will see here
helm status <release name>                   details of defined release
helm history release-name                    detail with revision number
helm rollback release-name <rivision-no>     if you dont specify rn then it will rollback to previous version
helm uninstall <rn>                          to remove release
helm repo remove <repo-name>                  ro remove repo
helm list -A                                list releases



apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}-container
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountPath }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.pvcClaimName }}
      nodeSelector:
        disktype: {{ .Values.nodeSelector.disktype }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: disktype
                    operator: In
                    values:
                      - "{{ .Values.affinity.nodeTypes[0] }}"
                      - "{{ .Values.affinity.nodeTypes[1] }}"

name: myapp  # Name used for naming the deployment

replicas: 2

image:
  repository: myapp
  tag: latest

resources:
  requests:
    memory: "64Mi"
    cpu: "250m"
  limits:
    memory: "128Mi"
    cpu: "500m"

volume:
  name: myapp-volume
  mountPath: /data
  pvcClaimName: myapp-pvc

env:
  MY_APP_ENV: production
  MY_SECRET_KEY: secret_value_from_config

nodeSelector:
  disktype: ssd

affinity:
  nodeTypes:
    - ssd
    - hdd





